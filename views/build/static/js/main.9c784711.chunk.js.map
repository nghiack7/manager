{"version":3,"sources":["components/Layout/NavigationBar.js","components/Layout/Layout.js","components/Home/Home.js","pages/HomePage.js","components/Errors/Errors.js","components/Customers/CustomerLists.js","components/Customers/AddCustomerPopup.js","components/Customers/EditCustomerPopup.js","components/Customers/Customers.js","pages/CustomerPage.js","components/Orders/Orders.js","pages/OrderPage.js","components/Products/Products.js","pages/ProductPage.js","App.js","index.js"],"names":["NavigationBar","useHistory","_jsxs","className","children","_jsx","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Link","to","_Fragment","Layout","props","Fragment","Home","HomePage","Errors","errors","errorList","key","Object","keys","push","map","error","useStyles","makeStyles","tableContainer","marginTop","tableHeaderCell","fontWeight","CustomerLists","_ref","customers","onEditCustomer","onDeleteCustomer","classes","Paper","Table","TableHead","TableRow","TableCell","TableBody","customer","name","gender","number_phone","Button","variant","color","onClick","theme","form","display","flexDirection","gap","spacing","width","AddCustomerPopup","onClose","onAddCustomer","formData","setFormData","useState","handleInputChange","e","value","target","prevData","Dialog","open","DialogTitle","onSubmit","preventDefault","DialogContent","TextField","label","onChange","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","EditCustomerPopup","useEffect","Boolean","Customers","setCustomers","setErrors","showAddPopup","setShowAddPopup","showEditPopup","setShowEditPopup","selectedCustomer","setSelectedCustomer","fetchCustomersHandler","useCallback","async","response","fetch","data","json","ok","errorText","hasOwnProperty","Error","unknown","message","timeoutId","setTimeout","console","log","clearTimeout","customersContent","length","customerId","selected","find","prevCustomers","filter","ID","errorContent","customerData","closeEditPopupHandler","updatedCustomerData","CustomerPages","search","marginBottom","Orders","searchTerm","setSearchTerm","searchResults","setSearchResults","event","searchButtonClickHandler","concat","handleSearch","TableContainer","component","order","items","created_at","OrderPage","Products","products","setProducts","showOrderDialog","setShowOrderDialog","selectedProduct","setSelectedProduct","handleFetchDataProducts","closeOrderDialog","product","price","onShowListOrder","aria-labelledby","maxWidth","money","ProductPage","App","Switch","Route","path","exact","CustomersPage","Redirect","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.9c784711.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst NavigationBar = () => {\n  const history = useHistory();\n\n  const isLoggedIn = true; // Fetch authentication status from context\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <button\n        type=\"button\"\n        className=\"navbar-toggler\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarCollapse\"\n        aria-controls=\"navbarCollapse\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className=\"collapse navbar-collapse justify-content-between\"\n        id=\"navbarCollapse\"\n      >\n        <div className=\"d-flex flex-row\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                Trang Chủ\n              </Link>\n            </li>\n            {isLoggedIn && (\n              <>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/customers\">\n                    Danh Sách Khách Hàng\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/products\">\n                    Sản Phẩm Của Tôi\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/orders\">\n                    Đơn Hàng Đã Bán\n                  </Link>\n                </li>\n              </>\n            )}\n          </ul>\n          \n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n","import { Fragment } from 'react';\n\nimport './Layout.css';\n\nimport NavigationBar from './NavigationBar';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <NavigationBar/>\n      <main>\n        <div className=\"container\">{props.children}</div>\n      </main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","const Home = () => {\n  return (\n    <section>\n      <h1>Welcome to Manage App!</h1>\n      <div className=\"body-content\">\n        <p>\n          Manage App is your all-in-one solution for efficient customer, order, and product management.\n          Whether you're handling customer relationships, processing orders, or managing your product inventory,\n          our application simplifies the process, providing you with the tools needed to streamline your business operations.\n        </p>\n        <p>\n          With an intuitive interface and robust functionalities, our app empowers you to create, update, and track\n          customer profiles, orders, and products effortlessly. Dive into detailed analytics, stay on top of inventory,\n          and gain valuable insights to drive business growth.\n        </p>\n        <p>\n          Get started today and experience the convenience of unified customer, order, and product management\n          at your fingertips with Manage App.\n        </p>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import Home from '../components/Home/Home';\n\nconst HomePage = () => {\n  return <Home/>;\n};\n\nexport default HomePage;\n","const Errors = (errors) => {\n  let errorList = [];\n  for (var key of Object.keys(errors)) {\n    errorList.push(errors[key]);\n  }\n  return (\n    <div className=\"mt-3\">\n      {errorList.map(error => <p className=\"alert alert-danger\">{error}</p>)}\n    </div>\n  )\n}\n\nexport default Errors;\n","import React from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    marginTop: 20,\n  },\n  tableHeaderCell: {\n    fontWeight: \"bold\",\n  },\n});\n\nconst CustomerLists = ({ customers, onEditCustomer, onDeleteCustomer }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.tableContainer}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.tableHeaderCell}>ID</TableCell>\n            <TableCell className={classes.tableHeaderCell}>Name</TableCell>\n            <TableCell className={classes.tableHeaderCell}>Gender</TableCell>\n            <TableCell className={classes.tableHeaderCell}>Phone</TableCell>\n            <TableCell className={classes.tableHeaderCell}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {customers.map((customer) => (\n            <TableRow key={customer.id}>\n              <TableCell>{customer.id}</TableCell>\n              <TableCell>{customer.name}</TableCell>\n              <TableCell>{customer.gender}</TableCell>\n              <TableCell>{customer.number_phone}</TableCell>\n              <TableCell>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => onEditCustomer(customer.id)}\n                >\n                  Chỉnh Sửa\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={() => onDeleteCustomer(customer.id)}\n                >\n                  Xóa\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nexport default CustomerLists;\n","import React, { useState } from \"react\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    makeStyles,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n  } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: theme.spacing(2),\n    width: \"300px\",\n  },\n}));\n\nconst AddCustomerPopup = ({ onClose, onAddCustomer }) => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    gender: \"\",\n    number_phone: \"\",\n    // Add other fields as needed for the customer\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validation logic here if needed\n\n    // Call the function to add the customer with formData\n    onAddCustomer(formData);\n\n    // Reset form data and close the popup\n    setFormData({\n      name: \"\",\n      gender: \"\",\n      number_phone: \"\",\n      // Reset other fields as needed for the customer\n    });\n    onClose();\n  };\n\n  return (\n    <Dialog open onClose={onClose}>\n      <DialogTitle>Thêm Khách Hàng Mới</DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent>\n          <div className={classes.form}>\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n              variant=\"outlined\"\n              fullWidth\n            />\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"gender-label\">Giới Tính</InputLabel>\n              <Select\n                labelId=\"gender-label\"\n                id=\"gender\"\n                value={formData.gender}\n                onChange={handleInputChange}\n                label=\"Gender\"\n                name=\"gender\"\n              >\n                <MenuItem value=\"male\">Nam</MenuItem>\n                <MenuItem value=\"female\">Nữ</MenuItem>\n                {/* Add other gender options as needed */}\n              </Select>\n            </FormControl>\n            <TextField\n              label=\"Số Điện Thoại\"\n              type=\"text\"\n              name=\"number_phone\"\n              value={formData.number_phone}\n              onChange={handleInputChange}\n              variant=\"outlined\"\n              fullWidth\n            />\n            {/* Add other input fields for the customer */}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add Customer\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddCustomerPopup;\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    makeStyles,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n  } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: theme.spacing(2),\n    width: \"300px\",\n  },\n}));\n\nconst EditCustomerPopup = ({ onClose, customer, onEditCustomer }) => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    gender: \"\",\n    number_phone: \"\",\n    // Add other fields as needed for the customer\n  });\n\n  useEffect(() => {\n    if (customer) {\n      setFormData({\n        name: customer.name || \"\",\n        gender: customer.gender || \"\",\n        number_phone: customer.number_phone || \"\",\n        // Set other fields based on 'customer' data\n      });\n    }\n  }, [customer]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validation logic here if needed\n\n    onEditCustomer({\n      ...formData,\n      id: customer.id, // Assuming 'ID' is the unique identifier for customers\n    });\n\n    setFormData({\n      name: \"\",\n      gender: \"\",\n      number_phone: \"\",\n      // Reset other fields as needed for the customer\n    });\n    onClose();\n  };\n\n  return (\n    <Dialog open={Boolean(customer)} onClose={onClose}>\n      <DialogTitle>Chỉnh Sửa Thông Tin Khách Hàng</DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent>\n          <div className={classes.form}>\n            <TextField\n              label=\"Họ và Tên\"\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n              variant=\"outlined\"\n              fullWidth\n            />\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"gender-label\">Giới Tính</InputLabel>\n              <Select\n                labelId=\"gender-label\"\n                id=\"gender\"\n                value={formData.gender}\n                onChange={handleInputChange}\n                label=\"Gender\"\n                name=\"gender\"\n              >\n                <MenuItem value=\"male\">Nam</MenuItem>\n                <MenuItem value=\"female\">Nữ</MenuItem>\n                {/* Add other gender options as needed */}\n              </Select>\n            </FormControl>\n            <TextField\n              label=\"Số Điện Thoại\"\n              type=\"text\"\n              name=\"number_phone\"\n              value={formData.number_phone}\n              onChange={handleInputChange}\n              variant=\"outlined\"\n              fullWidth\n            />\n            {/* Add other input fields for the customer */}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Update Customer\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default EditCustomerPopup;\n","import { useContext, useState, useEffect, useCallback } from \"react\";\n\nimport Errors from \"../Errors/Errors\";\nimport CustomerLists from \"./CustomerLists\";\nimport AddCustomerPopup from \"./AddCustomerPopup\";\nimport EditCustomerPopup from \"./EditCustomerPopup\";\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  const fetchCustomersHandler = useCallback(async () => {\n    setErrors({});\n\n    try {\n      const response = await fetch(\"/api/customers/\");\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = \"Fetching customers failed.\";\n        if (!data.hasOwnProperty(\"error\")) {\n          throw new Error(errorText);\n        }\n        if (typeof data[\"error\"] === \"string\") {\n          setErrors({ unknown: data[\"error\"] });\n        } else {\n          setErrors(data[\"error\"]);\n        }\n      } else {\n        setCustomers(data.data);\n      }\n    } catch (error) {\n      setErrors({ error: error.message });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCustomersHandler();\n    const delay = 5000; // 10 seconds in milliseconds\n\n    const timeoutId = setTimeout(() => {\n      // Place your code that needs to be delayed here\n      console.log(\"Executing after 5 seconds\");\n    }, delay);\n\n    return () => clearTimeout(timeoutId); //\n  }, [fetchCustomersHandler]);\n\n  const addCustomerHandler = (customerData) => {\n    // Assuming 'customerData' is an object containing customer information\n    // Send POST request to API to add new customer\n    // Update 'customers' state upon successful addition\n    setCustomers((prevCustomers) => [...prevCustomers, customerData]);\n    setShowAddPopup(false); // Close add popup after adding customer\n  };\n\n  const deleteCustomerHandler = (customerId) => {\n    // Send DELETE request to API to remove customer with 'customerId'\n    // Update 'customers' state upon successful deletion\n    setCustomers((prevCustomers) =>\n      prevCustomers.filter((customer) => customer.ID !== customerId)\n    );\n  };\n\n  const editCustomerHandler = (updatedCustomerData) => {\n    // Assuming 'updatedCustomerData' contains modified customer information\n    // Send PUT/PATCH request to API to update customer data\n    // Update 'customers' state upon successful update\n    setCustomers((prevCustomers) =>\n      prevCustomers.map((customer) =>\n        customer.ID === updatedCustomerData.ID ? updatedCustomerData : customer\n      )\n    );\n    setShowEditPopup(false); // Close edit popup after editing customer\n  };\n\n  const showEditPopupHandler = (customerId) => {\n    const selected = customers.find((customer) => customer.id === customerId);\n    setSelectedCustomer(selected);\n    setShowEditPopup(true);\n  };\n\n  const closeEditPopupHandler = () => {\n    setShowEditPopup(false);\n    setSelectedCustomer(null);\n  };\n\n  const customersContent =\n    customers.length === 0 ? (\n      <p>Chưa có khách hàng nào!!!</p>\n    ) : (\n      <CustomerLists\n        customers={customers}\n        onEditCustomer={showEditPopupHandler}\n        onDeleteCustomer={deleteCustomerHandler}\n      />\n    );\n\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n\n  return (\n    <section>\n      <h1 className=\"pb-4\">Danh Sách Khách Hàng</h1>\n      <button onClick={() => setShowAddPopup(true)}>Thêm Khách Hàng Mới</button>\n      {errorContent}\n      {customersContent}\n\n      {showAddPopup && (\n        <AddCustomerPopup\n          onClose={() => setShowAddPopup(false)}\n          onAddCustomer={addCustomerHandler}\n        />\n      )}\n\n      {showEditPopup && selectedCustomer && (\n        <EditCustomerPopup\n          onClose={closeEditPopupHandler}\n          customer={selectedCustomer}\n          onEditCustomer={editCustomerHandler}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Customers;\n","import Customers from '../components/Customers/Customers';\n\nconst CustomerPages = () => {\n  return <Customers/>;\n};\n\nexport default CustomerPages;\n","import React, { useState } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  Paper,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Orders = () => {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/orders?search=${searchTerm}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      setSearchResults(data); // Assuming data is an array of filtered customers\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      // Handle error state or display error message to the user\n    }\n  };\n  const handleSearchInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  const searchButtonClickHandler = () => {\n    handleSearch();\n  };\n\n  return (\n    <div>\n      <TextField\n        className={classes.search}\n        label=\"Search by Name or Phone\"\n        variant=\"outlined\"\n        value={searchTerm}\n        onChange={handleSearchInputChange}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={searchButtonClickHandler}\n      >\n        Tìm Kiếm\n      </Button>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Số TT</TableCell>\n              <TableCell>Danh Sách Đơn Hàng</TableCell>\n              <TableCell>Thời Gian Mua</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {searchResults.map((order) => (\n              <TableRow key={order.id}>\n                <TableCell>{order.id}</TableCell>\n                <TableCell>{order.items}</TableCell>\n                <TableCell>{order.created_at}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Orders;\n","import Orders from \"../components/Orders/Orders\"\nconst OrderPage = () => {\n  return <Orders />;\n};\n\nexport default OrderPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Button,\n    Paper,\n    TextField,\n    makeStyles,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n  } from \"@material-ui/core\";\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Products = () => {\n    const classes = useStyles();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [products, setProducts] = useState([]);\n    const [showOrderDialog, setShowOrderDialog] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null); \n\n  const handleFetchDataProducts = async () => {\n    try {\n      const response = await fetch(`/api/products`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      setProducts(data.data); // Assuming data is an array of filtered customers\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      // Handle error state or display error message to the user\n    }\n  };\n  useEffect(() => {\n    handleFetchDataProducts();\n  }, []); // Empty dependency array to execute once on component mount\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/products/?search=${searchTerm}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setProducts(data.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      // Handle error state or display error message to the user\n    }\n  };\n\n  const handleSearchInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const searchButtonClickHandler = () => {\n    handleSearch();\n  };\n\n  const onShowListOrder = async (name) => {\n    try {\n      const response = await fetch(`/api/products/?name=${name}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      setSelectedProduct(name);\n      setShowOrderDialog(true);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      // Handle error state or display error message to the user\n    }\n  };\n\n  const closeOrderDialog = () => {\n    setShowOrderDialog(false);\n    setSelectedProduct(null);\n  };\n\n  return (\n    <div>\n      <TextField\n        className={classes.search}\n        label=\"Tìm kiếm sản phẩm\"\n        variant=\"outlined\"\n        value={searchTerm}\n        onChange={handleSearchInputChange}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={searchButtonClickHandler}\n      >\n        Tìm Kiếm\n      </Button>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Số TT</TableCell>\n              <TableCell>Tên Sản Phẩm </TableCell>\n              <TableCell>Giá (vnđ)</TableCell>\n              <TableCell>Lịch Sử Mua Hàng</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.map((product) => (\n              <TableRow key={product.id}>\n                <TableCell>{product.id}</TableCell>\n                <TableCell>{product.name}</TableCell>\n                <TableCell>{product.price}</TableCell>\n                <TableCell>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => onShowListOrder(product.name)}\n                >\n                  Danh Sách Đơn Hàng\n                </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n       {/* Dialog for displaying orders */}\n       <Dialog\n        open={showOrderDialog}\n        onClose={closeOrderDialog}\n        aria-labelledby=\"order-dialog-title\"\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle id=\"order-dialog-title\">\n          {`Danh Sách Đơn Hàng cho sản phẩm \"${selectedProduct}\"`}\n        </DialogTitle>\n        <DialogContent>\n          \n          <TableContainer component={Paper}>\n            <Table>\n            <TableHead>\n            <TableRow>\n              <TableCell>Đơn hàng </TableCell>\n              <TableCell>Giá Trị</TableCell>\n              <TableCell>Thời gian</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.map((order) => (\n              <TableRow key={order.id}>\n                <TableCell>{order.id}</TableCell>\n                <TableCell>{order.money}</TableCell>\n                <TableCell>{order.created_at}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n            </Table>\n          </TableContainer>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeOrderDialog} color=\"secondary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Products;\n","import Products from \"../components/Products/Products\";\n\nconst ProductPage = () => {\n    return <Products/>;\n};\nexport default ProductPage;","import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport HomePage from \"./pages/HomePage\";\nimport CustomersPage from \"./pages/CustomerPage\";\nimport OrderPage from \"./pages/OrderPage\";\nimport ProductPage from \"./pages/ProductPage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n\n        <Route path=\"/customers\">\n          <CustomersPage />\n        </Route>\n        <Route path=\"/orders\">\n        <OrderPage />\n        </Route>\n        <Route path=\"/products\">\n          <ProductPage />\n        </Route>\n\n         <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}